studio = read.table('studio.txt')
names(studio)=c('X1','X2','Y')
fit = lm(Y~X1+X2, data=studio)
summary(fit); confint(fit); anova(fit)
studio = read.table('studio.txt')
names(studio)=c('X1','X2','Y')
fit = lm(Y~X1+X2, data=studio)
summary(fit); confint(fit); anova(fit)
studio = read.table('CH06FI05.txt')
names(studio)=c('X1','X2','Y')
fit = lm(Y~X1+X2, data=studio)
summary(fit)
confint(fit)
anova(fit)
newx = data.frame(X1 = 65.4, X2 = 17.6)
yhat= predict(fit)
yhat
predict(fit, newx, interval="confidence",level=.95)
predict(fit, newx, interval="prediction",level=.95)
newx = data.frame(X1 = 68.5, X2 = 18.7)
predict(fit, newx, interval="prediction",level=.95)
predict(fit, newx, interval="confidence",level=.95)
newx
newx = data.frame(X1 = 68.5, X2 = 16.7)
predict(fit, newx, interval="confidence",level=.95)
predict(fit, newx, interval="prediction",level=.95)
dat = read.table("C:Users\\Mac\\Desktop\\过程\\学业\\本科\\专业课\\应用线性回归\\Data_5e\\CH07TA01.txt")
X1 = dat[,1]; X2 = dat[,2]; X3 = dat[,3]; Y = dat[,4]
fit1 = lm(Y~X1); fit2 = lm(Y~X2)
fit12 = lm(Y~X1+X2); fit = lm(Y~X1+X2+X3)
SSE1 = deviance(fit1); SSE2 = deviance(fit2)
SSE12 = deviance(fit12); SSE123 = deviance(fit)
SSR1.2 = deviance(fit2)-deviance(fit12)
SSE2 = deviance(fit2); RY1.2 = SSR1.2/SSE2
dat = read.table("C:Users\\Mac\\Desktop\\过程\\学业\\本科\\专业课\\应用线性回归\\Data_5e\\CH07TA01.txt")
X1 = dat[,1]; X2 = dat[,2]; X3 = dat[,3]; Y = dat[,4]
fit1 = lm(Y~X1); fit2 = lm(Y~X2)
fit12 = lm(Y~X1+X2); fit = lm(Y~X1+X2+X3)
SSE1 = deviance(fit1); SSE2 = deviance(fit2)
SSE12 = deviance(fit12); SSE123 = deviance(fit)
SSR1.2 = deviance(fit2)-deviance(fit12)
SSE2 = deviance(fit2); RY1.2 = SSR1.2/SSE2
dat = read.table("C:\\Users\\Mac\\Desktop\\过程\\学业\\本科\\专业课\\应用线性回归\\Data_5e\\CH07TA01.txt")
X1 = dat[,1]; X2 = dat[,2]; X3 = dat[,3]; Y = dat[,4]
fit1 = lm(Y~X1); fit2 = lm(Y~X2)
fit12 = lm(Y~X1+X2); fit = lm(Y~X1+X2+X3)
SSE1 = deviance(fit1); SSE2 = deviance(fit2)
SSE12 = deviance(fit12); SSE123 = deviance(fit)
SSR1.2 = deviance(fit2)-deviance(fit12)
SSE2 = deviance(fit2); RY1.2 = SSR1.2/SSE2
dat = read.table("C:\\Users\\Mac\\Desktop\\过程\\学业\\本科\\专业课\\应用线性回归\\Data_5e\\CH07TA01.txt")
X1 = dat[,1]; X2 = dat[,2]; X3 = dat[,3]; Y = dat[,4]
fit = lm(Y~X1+X2); fit
n = nrow(dat)
par(mfrow=c(1,2))
fit2 = lm(Y~X2); fit12 = lm(X1~X2)
fit1 = lm(Y~X1); fit21 = lm(X2~X1)
plot(fit12$resi,fit2$resi, main='Added Variable Plot for X1')
abline(lm(fit2$resi~fit12$resi)); lm(fit2$resi~fit12$resi)
par(mfrow=c(1,1)); plot(fit)
tlist = elist*((n-p-1)/(SSE*(1-hlist)-elist^2))^(1/2)
cbind(elist,hlist,tlist)
max(abs(tlist)); qt(0.9975,n-p-1)
elist = fit$resi; SSE = sum(elist^2)
X = cbind(1,X1,X2)
hlist = diag(X%*%solve(t(X)%*%X)%*%t(X))
tlist = elist*((n-p-1)/(SSE*(1-hlist)-elist^2))^(1/2)
cbind(elist,hlist,tlist)
max(abs(tlist)); qt(0.9975,n-p-1)
par(mfrow=c(1,1)); plot(fit)
p = 3
elist = fit$resi; SSE = sum(elist^2)
X = cbind(1,X1,X2)
hlist = diag(X%*%solve(t(X)%*%X)%*%t(X))
tlist = elist*((n-p-1)/(SSE*(1-hlist)-elist^2))^(1/2)
cbind(elist,hlist,tlist)
max(abs(tlist)); qt(0.9975,n-p-1)
t(X)%*%X
2*p/n
MSE = SSE/(n-p)
DFFITS = tlist * (hlist/(1-hlist))^0.5
Dlist = elist^2 /p/MSE*hlist/((1-hlist)^2)
clist = diag(solve( t(X)%*%X))
b = fit$coef; DFBETAS = matrix(0,n,p)
for (i in 1:n){
fiti = lm(Y[-i]~X1[-i]+X2[-i])
bi = fiti$coef
MSEi = sum(fiti$resi^2)/(n-1-p)
DFBETAS[i,] = (b-bi)/sqrt(MSEi*clist) }
cbind(Dlist,DFBETAS)
Xmat = cbind(X1,X2,X3); VIF3 = diag(solve(cor(Xmat))); VIF3
Xmat = cbind(X1,X2); VIF2 = diag(solve(cor(Xmat))); VIF2
cor(Xmat)
solve(cor(Xmat))
bp = read.table("C:\\Users\\Mac\\Desktop\\过程\\学业\\本科\\专业课\\应用线性回归\\Data_5e\\CH11TA01.txt")
X = bp[,1]; Y = bp[,2]
resi = residuals(lmfit)
lmfit = lm(Y~X)
plot(X, Y); abline(lmfit)
resi = residuals(lmfit)
vfit = lm(abs(resi)~X)
wlist = vfit$fitted^(-2)
wlfit = lm(Y~X, weights=wlist)
###compare the two fit...
summary(lmfit)
summary(wlfit)
dat = read.table("C:\\Users\\Mac\\Desktop\\过程\\学业\\本科\\专业课\\应用线性回归\\Data_5e\\CH07TA01.txt")
library(MASS)
library(MASS)
X = cbind(dat[,1:3])
lamlist = seq(from=0, to=1, by=0.01)
fit = lm.ridge(Y~X1+X2+X3, lambda=0.1)
X1 = dat[,1]; X2 = dat[,2]; X3 = dat[,3]; Y = dat[,4]
fit = lm.ridge(Y~X1+X2+X3, lambda=0.1)
residuals(fit)
fit = lm.ridge(Y~X1+X2+X3-1, lambda=0.1)
residuals(fit)
fit$coef
fit = lm.ridge(Y~X1+X2+X3, lambda=0.1)
fit$coef
fit = lm.ridge(Y~X1+X2+X3-1, lambda=0.1)
fit$coef
fit$fit.values()
fit.fitted.values()
fitted.values()
fit.values()
fut
fit
fit = lm.ridge(Y~X1+X2+X3-1, lambda=0.1)
fit
fit$Inter
fit$lambda
fitted.values(fit)
fitted(fit)
y= predict(fit)
predict(fit)
fit$resi
summary(fit)
fit$coef
fit$coef
fit = lm.ridge(Y~X1+X2+X3-1, lambda=0.1)
fit$coef
fit$Inter
fit = lm.ridge(Y~X1+X2+X3, lambda=0.1)
fit$coef
fit = lm.ridge(Y~1+X1+X2+X3, lambda=0.1)
fit$coef
fit$Inter
fit = lm.ridge(Y~X1+X2+X3, lambda=0.1)
fit$Inter
fit = lm.ridge(Y~X1+X2+X3-1, lambda=0.1)
fit$Inter
food-<read.table("C:\Users\Mac\Desktop\LDR\food.data.txt")
food-<read.table("C:\Users\Mac\Desktop\LDR\food.data.txt")
food-<read.table("C:\\Users\\Mac\\Desktop\\LDR\\food.data.txt", header-T)
food-<read.table("C:\\Users\\Mac\\Desktop\\LDR\\food.data.txt", header=T)
food<-read.table("C:\\Users\\Mac\\Desktop\\LDR\\food.data.txt", header=T)
food.input<-apply(food[,9:14], 2, scale)
out<-princomp(food.input)
View(out)
soil<-read.table('C:\\Users\\Mac\\Desktop\\过程\\学业\\本科\\专业课\\多元统计\\LDA\\data\\soil.txt', header=T)
out <- lda(Group.no.~, soil[,-10])
out <- lda(Group.no, soil[,-10])
View(soil)
View(soil)
out <- lda(soil[,-1], soil[,-10])
lda
lda()
library(MASS)
wdbc<-read.table('C:\\Users\\Mac\\Desktop\\过程\\学业\\本科\\专业课\\多元统计\\LDA\\data\\wdbc.txt')
wdbc<-read.table('C:\\Users\\Mac\\Desktop\\过程\\学业\\本科\\专业课\\多元统计\\LDA\\data\\wdbc.txt', sep=',')
out<-lda(V2~., wdbc[,-1])
View(wdbc)
View(wdbc)
View(wdbc)
View(out)
View(out)
out.predict<-predict(out)
View(out.predict)
out.predict[["class"]]
out$scaling
wdbc[wdbc==0]<-0.001;wdbc[,3:32]=log(wdbc[,3:32])
out<-lda(V2~., wdbc[,-1])
out$scaling
View(out.predict)
View(out.predict)
out.predict<-predict(out)
View(out.predict)
View(out.predict)
out$scaling
View(wdbc)
wdbc[,-1]
wdbc[,-1].shape
aaa<-wdbc[,-1].shape
aaa<-wdbc[,-1]
View(aaa)
View(out.predict)
out.predict$class
View(out)
View(out)
data<-read.csv(("ACTG175(speff2trial).txt"))
View(data)
Surv(data$days, data$arms==1)
library(survival)
Surv(data$days, data$arms==1)
Surv(data$days, data$cens==1)
Surv(data$days, data$cens)
Surv(data$days, data$cens==1);
Y <- Surv(data$days, data$cens==1);
Y
kmfit1=survfit(Y1)
kmfit1=survfit(Y~1)
kmfit1<-survfit(Y~1)
View(kmfit1)
for i in range(3)
for (i in range(3))
{}
for (i in range(3)){
}
range(3)
for (i in 0:3){
print(i)}
for (i in 0:3){
group<-data[data$arms==1]}
for (i in 0:3){
group<-data[which(data$arms==i),]
Y<-Surv(group$days, group$cens==1)
plot(survfit(Y~1))}
for (i in 0:3){
group<-data[which(data$arms==i),]
summary(survfit(Y~1))}
for (i in 0:3){
group<-data[which(data$arms==i),]
summary(survfit(Y~1))}
group<-data[which(data$arms==0),]
Y<-Surv(group$days, group$cens==1)
plot(survfit(Y~1))}
plot(survfit(Y~1))
plot(survfit(Y~1))
summary(survfit(Y~1))
plot(survfit(Y~1))
kmfit <- survfit(Y~1)
View(kmfit1)
plot(survfit(Y~1))
Y<-Surv(data$days, data$cens==1)
kmfit <- survfit(Y~data$arms)
plot(kmfit)
plot(kmfit,xlab=“survival time in days”,ylab=“survival probabilities”)
plot(kmfit,xlab="survival time in days",ylab="survival probabilities")
legend(c("treatment 0","treatment 1","treatment 2","treatment 3"))
legend("best", c("treatment 0","treatment 1","treatment 2","treatment 3"))
legend("bottomleft", c("treatment 0","treatment 1","treatment 2","treatment 3"))
plot(kmfit,xlab="survival time in days",ylab="survival probabilities", col=c("red","blue","green","yellow"))
plot(kmfit,xlab="survival time in days",ylab="survival probabilities", col=c("red","blue","green","orange"))
legend("bottomleft", c("treatment 0","treatment 1","treatment 2","treatment 3"), col=c("red","blue","green","orange")
)
legend("bottomleft", c("treatment 0","treatment 1","treatment 2","treatment 3"), col=c("red","blue","green","orange", lty="solid"))
plot(kmfit,xlab="survival time in days",ylab="survival probabilities", col=c("red","blue","green","orange"))
legend("bottomleft", c("treatment 0","treatment 1","treatment 2","treatment 3"), lty="solid", col=c("red","blue","green","orange"))
> data<-read.csv(("ACTG175(speff2trial).txt"))
> Y<-Surv(data$days, data$cens==1)
> kmfit <- survfit(Y~data$arms)
> plot(kmfit,xlab="survival time in days",ylab="survival probabilities", col=c("red","blue","green","orange"))
> legend("bottomleft", c("treatment 0","treatment 1","treatment 2","treatment 3"), lty="solid", col=c("red","blue","green","orange"))
data<-read.csv(("ACTG175(speff2trial).txt"))
Y<-Surv(data$days, data$cens==1)
kmfit <- survfit(Y~data$arms)
plot(kmfit,xlab="survival time in days",ylab="survival probabilities", col=c("red","blue","green","orange"))
legend("bottomleft", c("treatment 0","treatment 1","treatment 2","treatment 3"), lty="solid", col=c("red","blue","green","orange"))
##kk
summary(kmfit,times=365)
summary(kmfit, times=730)
setwd("C:\\Users\\Mac\\Desktop\\过程\\学业\\本科\\专业课\\多元统计\\CART\\data")
vehicle<-read.table("vehicle3.txt", header=T)
vehicle$class<-factor(vehicle$class)
#绘制阿尔法&树大小-误判率图
library(rpart, rpart.plot)
out<-rpart(class~.-pam, vehicle, cp=1e-10)
out.prune<-prune(out, cp=out$cptable[9,1])
rpart.plot(out.prune, type=1, extra=1)
rpart.plot(out.prune, type=1, extra=1)
library(rpart, rpart.plot)
rpart.plot(out.prune, type=1, extra=1)
library(rpart.plot)
rpart.plot(out.prune, type=1, extra=1)
