install.packages("rootSolve")
q()
dim(J)
View(addicts)
#ÂØºÂÖ•Êï∞ÊçÆ------
library(survival)
addicts <- read.table("E:/myfile/Â≠¶‰π†/‰π?survival analysis/data/addicts.dat",
col.names=c('iD','clinic','status','survt','prison',
'dose'),skip=19)
# ! Column 1 = ID of subject
# !        2 = Clinic (1 or 2)
# !        3 = status (0=censored, 1=endpoint)
# !        4 = survival time (days)
# !        5 = prison record?
# !        6 = methodone dose (mg/day)
head(addicts)
#create a survival object Y used as the response variable,+Âè∑‰ª£Ë°®censorship
Y <- Surv(addicts$survt,addicts$status) #Á¨¨‰∏Ä‰∏™‰∏∫ÁîüÂ≠òÊó∂Èó¥ÔºåÁ¨¨‰∫å‰∏™‰∏∫censorshipÁä∂ÊÄ?#KM survival estimate ,~1 request an intercept only model
kmfit1 <- survfit(Y~1)
#get KM estimates for all event time
summary(kmfit1)
#get KM estimates for specified survival time
summary(kmfit1,365)
# stratify by variable CLINIC
kmfit2 <- survfit(Y~addicts$clinic)
summary(kmfit2,100*(0:10))
#KM survival plot Ôºåplot survival estimate against time
plot(kmfit2)
plot(kmfit2,lty=c("solid","dashed"),col=c("black","grey"),
xlab="survival time in days",ylab="survival probability")
legend("topright",c("Clinic 1","Clinic2"),lty=c("solid","dashed"),col=c("black","grey"))
#implement a log rank test----------
survdiff(Surv(survt,status)~clinic,data=addicts)
#Á≠â‰∫é
survdiff(Surv(addicts$survt,addicts$status)~clinic)
#Á≠â‰∫é
attach(addicts)
survdiff(Surv(survt,status)~clinic)
#Á¨¨ÂõõÂàólog-rank statistic ~ X(G-1)^2
#alternative to log-rank test:Áªô‰∏çÂêåÁ≠âÁ∫ßËµã‰∏çÂêåÊùÉÈáçÔºåÊùÉÈáç‰∏∫s(tj)^rho
survdiff(Surv(survt,status)~clinic,data=addicts,rho = 1)
survdiff(Surv(survt,status)~clinic,data=addicts,rho = 0) #Á≠â‰ª∑‰∫élog-rank
#stratified log rank test for Clinic(Stratified by prison)
survdiff(Surv(survt,status)~clinic+strata(prison),data=addicts)
#log-rank test:are KM curves statistically equivalent
#implement a log rank test----------
survdiff(Surv(survt,status)~clinic,data=addicts)
A <- ACTG175
A$arms
names(A)
survdiff(Surv(days,cens)~arms,data=ACTG175)
survdiff(Surv(days,cens)~arms+strata(race),data=ACTG175)
survdiff(Surv(days,cens)~treat,data=ACTG175)
kmfit <- survfit(Surv(days,cens) ~arms)
# 2.KM survival curves plot.
attach(ACTG175)
kmfit <- survfit(Surv(days,cens) ~arms)
plot(kmfit)
kmfit <- survfit(Surv(days,cens) ~arms+strata(race))
plot(kmfit)
kmfit <- survfit(Surv(days,cens) ~arms)
plot(kmfit)
unique(arms)
race
kmfit2 <- survfit(Surv(days,cens)~race+gender)
plot(kmfit2)
# (b)
kmfit2 <- survfit(Surv(days,cens)~race)
plot(kmfit2)
# (b)
kmfit2 <- survfit(Surv(days,cens)~race+gender)
plot(kmfit2)
?survfit
kmfit2 <- survfit(Surv(days,cens)~race+gender)
plot(kmfit2)
print(survfit(Surv(days,cens)~arms), show.rmean=TRUE)
print(survfit(Surv(days,cens)~arms))
print(survfit(Surv(days,cens)~arms), show.rmean=TRUE)
print(survfit(Surv(days,cens)~arms))
# 2.KM survival curves plot.-------
# (a) Draw a survival curve plot using the Kaplan-Meier approach for the four treatment
# groups (i.e., arms). Compare the four survival curves.
attach(ACTG175)
print(survfit(Surv(days,cens)~arms))
survfit(Surv(days,cens)~arms)
survfit(Surv(days,cens)~1)
Surv(days,cens)~arms
Surv(days,cens)
cens
arms
Surv(days,cens)~arms
survfit(Surv(days,cens)~arms)
survfit(Surv(days,cens)~arms)
kmfit1 <- survfit(Surv(days,cens)~arms)
plot(kmfit1)
Y <- Surv(days,cens)
Y
Y <- Surv(days,cens==1)
Y
Y <- Surv(days,cens)
Y1<- Surv(days,cens==1)
Y~=Y1
Y!=Y1
Y<>Y1
Y==Y1
Y
Y1
coxph(Y~ treat+cd40+cd80+age+wtkg+hemo+homo+drug+karnof+oprior+zprior+
race+gender+symptom,data=ACTG175)
names(ACTG175)
coxph(Y~ treat+cd40+cd80+age+wtkg+hemo+homo+drugs+karnof+oprior+zprior+
race+gender+symptom,data=ACTG175)
zprior
unique(zprior)
survdiff(Surv(days,cens)~arms,data=ACTG175)
summary(ACTG175)
survdiff(Surv(days,cens)~drugs,data=ACTG175)
survdiff(Surv(days,cens)~z30,data=ACTG175)
kmfit(Surv(days,cens)~z30,data=ACTG175)
kmfit <- survfit(Surv(days,cens)~z30,data=ACTG175)
plot(kmfit)
min(days)
max(days)
survdiff(Surv(days,cens)~z30,data=ACTG175)
plot(kmfit2,lty=c("solid","dashed"),col=c("black","grey"),
xlab="survival time in days",ylab="survival probability")
plot(kmfit,lty=c("solid","dashed"),col=c("black","grey"),
xlab="survival time in days",ylab="survival probability")
plot(kmfit,lty=c("solid","dashed"),col=c("black","black"),
xlab="survival time in days",ylab="survival probability")
plot(kmfit,lty=c("solid","dashed"),col=c("black","black"),
xlab="survival time in days",ylab="survival probability")
legend("topright",c("z30=1","z30=0"),lty=c("solid","dashed"),col=c("black","black"))
legend("downright",c("z30=1","z30=0"),lty=c("solid","dashed"),col=c("black","black"))
legend("bottomright",c("z30=1","z30=0"),lty=c("solid","dashed"),col=c("black","black"))
plot(kmfit,lty=c("solid","dashed"),col=c("black","black"),
xlab="survival time in days",ylab="survival probability")
legend("bottomright",c("z30=1","z30=0"),lty=c("solid","dashed"),col=c("black","black"))
kmfit <- survfit(Surv(days,cens)~z30,data=ACTG175)
plot(kmfit)
plot(kmfit,lty=c("solid","dashed"),col=c("black","black"),
xlab="survival time in days",ylab="survival probability")
legend("bottomright",c("z30=1","z30=0"),lty=c("solid","dashed"),col=c("black","black"))
kmfit <- survfit(Surv(days,cens)~treat,data=ACTG175)
plot(kmfit,lty=c("solid","dashed"),col=c("black","black"),
xlab="survival time in days",ylab="survival probability")
legend("bottomright",c("z30=1","z30=0"),lty=c("solid","dashed"),col=c("black","black"))
#Read the data file
ACTG175<-read.csv("E:/ACTG175(speff2trial).txt", header=TRUE,sep=",")
ACTG175<-read.csv("E:/myfile/Â≠¶‰π†/lecture/ÁîüÂ≠òÂàÜÊûê/code/ACTG175(speff2trial).txt", header=TRUE,sep=",")
survdiff(Surv(days,cens)~treat,data=ACTG175)
library(survival)
survdiff(Surv(days,cens)~treat,data=ACTG175)
kmfit <- survfit(Surv(days,cens)~treat,data=ACTG175)
plot(kmfit,lty=c("solid","dashed"),col=c("black","black"),
xlab="survival time in days",ylab="survival probability")
legend("bottomright",c("treat=1","treat=0"),lty=c("solid","dashed"),col=c("black","black"))
treat
attcah(ACTG175)
attach(ACTG175)
kmfit <- survfit(Surv(days,cens)~treat,data=ACTG175)
plot(kmfit,lty=c("solid","dashed"),col=c("black","black"),
xlab="survival time in days",ylab="survival probability")
legend("bottomright",c("treat=1","treat=0"),lty=c("solid","dashed"),col=c("black","black"))
plot(kmfit,fun="cloglog",xlab = "time in days using logarithmic scale",
ylab="log-log survival",main="log-log curves by clinic")
plot(kmfit)
plot(kmfit,fun="cloglog")
survdiff(Surv(days,cens)~arms,data=ACTG175)
attach(ACTG175)
kmfit <- survfit(Surv(days,cens)~arms,data=ACTG175)
plot(kmfit,lty=c("solid","dashed"),col=c("black","black"),
xlab="survival time in days",ylab="survival probability")
legend("bottomright",c("treat=1","treat=0"),lty=c("solid","dashed"),col=c("black","black"))
plot(kmfit,fun="cloglog")
attach(ACTG175)
kmfit <- survfit(Surv(days,cens)~treat,data=ACTG175)
plot(kmfit,lty=c("solid","dashed"),col=c("black","black"),
xlab="survival time in days",ylab="survival probability")
legend("bottomright",c("treat=1","treat=0"),lty=c("solid","dashed"),col=c("black","black"))
plot(kmfit,fun="cloglog")
plot(kmfit,lty=c("solid","dashed"),col=c("black","black"),
xlab="survival time in days",ylab="survival probability")
kmfit <- survfit(Surv(days,cens)~treat,data=ACTG175)
plot(kmfit,lty=c("solid","dashed"),col=c("black","black"))
legend("bottomright",c("treat=1","treat=0"),lty=c("solid","dashed"),col=c("black","black"))
kmfit <- survfit(Surv(days,cens)~treat,data=ACTG175)
plot(kmfit,lty=c("solid","dashed"),col=c("black","black"))
4.523/0.41
Y <- Surv(days,cens)
names(ACTG175)
mod1 <- coxph(Y~treat+z30+cd40)
summary(mod1)
summary(mod2)
mod2 <- coxph(Y~treat+z30+cd40+cd80)
summary(mod2)
mod1
mod2
mod1 <- coxph(Y~treat+cd40)
mod1
mod2 <- coxph(Y~treat+cd40+cd80+z30)
mod2
mod1 <- coxph(Y~treat+cd40+cd80)
mod1
mod2 <- coxph(Y~treat+cd40+cd80+z30)
mod2
mod2 <- coxph(Y~treat+cd40+cd80+sex)
mod2 <- coxph(Y~treat+cd40+cd80+gender)
mod2
mod1 <- coxph(Y~treat+age+cd80+drugs)
mod1
coxph(Y~ treat+cd40+cd80+age+wtkg+hemo+homo+drugs+karnof+oprior+zprior+
race+gender+symptom,data=ACTG175)
coxph(Y~treat+cd40+cd80+symptom)
coxph(Y~treat+age)
coxph(Y~treat+age+symptom)
names(ACTG175)
coxph(Y~treat+age+symptom+gender)
coxph(Y~treat+age)
coxph(Y~treat+age+symptom)
plot(kmfit,fun="cloglog")
symptom
mod1 <- coxph(Y~treat+age+symptom+cd40)
mod1
mod2 <- coxph(Y~treat+age+symptom+cd40+age*cd40)
mod2
mod3 <- coxph(Y~treat+age+symptom+cd40+symptom*cd40)
mod3
pchisq(0.5)
pchisq(0.5,1)
(-2)*(mod1$loglik[2]-mod2$loglik[2])
?pchisq
pchisq(0.5,1)
pchisq(0.5,1)
pchisq(0.95,1)
mod1 <- coxph(Y~treat+age+symptom+cd40)
mod1
mod2 <- coxph(Y~treat+age+symptom+cd40+treat*cd40)
mod2
mod3 <- coxph(Y~treat+age+symptom+cd40+treat*symptom)
mod3
LRT <- (-2)*(mod1$loglik[2]-mod2$loglik[2])
pchisq(LRT,1,lower.tail = F)
LRT <- (-2)*(mod1$loglik[2]-mod3$loglik[2])
pchisq(LRT,1,lower.tail = F)
mod1 <- coxph(Y~treat+age+symptom+cd40)
mod1
mod2 <- coxph(Y~treat+age+symptom+cd40+treat*cd40)
mod2
mod3 <- coxph(Y~treat+age+symptom+cd40+treat*symptom)
mod3
summary(mod2)
summary(mod3)
mean(cd40)
kmfit <- survfit(Surv(days,cens)~treat,data=ACTG175)
plot(kmfit,lty=c("solid","dashed"),col=c("black","black"))
legend("bottomright",c("treat=1","treat=0"),lty=c("solid","dashed"),col=c("black","black"))
plot(kmfit,fun="cloglog")
plot(kmfit,fun="cloglog",lty=c("solid","dashed"),col=c("black","black"))
legend("bottomright",c("treat=1","treat=0"),lty=c("solid","dashed"),col=c("black","black"))
install.packages("survminer")
install.packages("survminer")
q()
#ÂØºÂÖ•Êï∞ÊçÆ------
library(survival)
addicts <- read.table("E:/myfile/Â≠¶‰π†/‰π¶/ÁîüÂ≠òÂàÜÊûêÁõ∏ÂÖ≥/survival analysis/data/addicts.dat",
col.names=c('iD','clinic','status','survt','prison',
'dose'),skip=19)
# ! Column 1 = ID of subject
# !        2 = Clinic (1 or 2)
# !        3 = status (0=censored, 1=endpoint)
# !        4 = survival time (days)
# !        5 = prison record?
# !        6 = methodone dose (mg/day)
head(addicts)
#-----
#1.estimating survival functions(unadjusted) and comparing them across strata
#create a survival object Y used as the response variable,+Âè∑‰ª£Ë°®censorship
Y <- Surv(addicts$survt,addicts$status) #Á¨¨‰∏Ä‰∏™‰∏∫ÁîüÂ≠òÊó∂Èó¥ÔºåÁ¨¨‰∫å‰∏™‰∏∫censorshipÁä∂ÊÄÅ
#KM survival estimate ,~1 request an intercept only model
kmfit1 <- survfit(Y~1)
#get KM estimates for all event time
summary(kmfit1)
#or  summary(survfit(Surv(addicts$survt,addicts$status==1)~1))
#get KM estimates for specified survival time
summary(kmfit1,365)
# stratify by variable CLINIC
kmfit2 <- survfit(Y~addicts$clinic)
summary(kmfit2,100*(0:10))
#KM survival plot Ôºåplot survival estimate against time
plot(kmfit2)
plot(kmfit2,lty=c("solid","dashed"),col=c("black","grey"),
xlab="survival time in days",ylab="survival probability")
legend("topright",c("Clinic 1","Clinic2"),lty=c("solid","dashed"),col=c("black","grey"))
#log-rank test:are KM curves statistically equivalent
#2.Assessing PH Assumption Using Graphical Approach------
plot(kmfit2,fun="cloglog",xlab="time in days using logarithmic scale",ylab="log-log survival",main="log-log curves by clinic")
kmfit3 <- summary(kmfit2)
kmfit4 <- data.frame(kmfit3$strata,kmfit3$time,kmfit3$surv)
names(kmfit4) <- c("clinic","time","survival")
head(kmfit4)
clinic1 <- kmfit4[kmfit4$clinic=="addicts$clinic=1",]
clinic2 <- kmfit4[kmfit4$clinic=="addicts$clinic=2",]
plot(clinic1$time,log(-log(clinic1$survival)),
xlab="survival time in days", ylab="log-log survival",
xlim=c(0,800),col="black",type = "l",
lty="solid",main="log-log curves by clinic")
par(new=T) #first plot not get earased
plot(clinic2$time,log(-log(clinic2$survival)),axes = F,
xlab="survival time in days",ylab="log-log survival",
col="grey50",type="l",lty="dashed")
legend("bottomright",c("Clinic 1","Clinic 2"),lty=c("solid","dashed"),
col=c("black","grey50"))
par(new=F) #‰∏ã‰∏™ÂõæÂá∫Êù•Ëøô‰∏™ÂõæÂ∞±‰ºöË¢´erased
#3.Running A COX PH Model-----
#create survivial object
Y <- Surv(addicts$survt,addicts$status==1)
coxph(Y~prison+dose+clinic,data = addicts)
# head(addicts)
summary(coxph(Y~prison+dose+clinic,data = addicts))
#handling ties in cox likelihood
coxph(Y~prison+dose+clinic,data = addicts,method = "efron")
coxph(Y~prison+dose+clinic,data = addicts,method = "breslow")
coxph(Y~prison+dose+clinic,data = addicts,method = "exact")
# include two interaction terms ,likilihood ratio test,‰ººÁÑ∂ÊØîÊ£ÄÈ™å
#reduced model
mod1 <- coxph(Y~prison+dose+clinic,data=addicts)
#full model
mod2 <- coxph(Y~prison+dose+clinic+clinic*prison+clinic*dose,data=addicts)
names(mod2)
mod2$loglik
#likelihood ratio test statistic~X(2)
LRT <- (-2)*(mod1$loglik[2]-mod2$loglik[2])
pvalue <- pchisq(LRT,2,lower.tail = F)
#make it a function
lrt.surv <- function(mod.full,mod.reduced,df){
lrts <- (-2)*(mod.reduced$loglik[2]-mod.full$loglik[2])
# print(lrts)
pvalue <-1-pchisq(lrts,df)
return(pvalue)
}
lrt.surv(mod2,mod1,2)
mod2
mod2$loglik
?coxph
(-2)*(mod1$loglik[2]-mod2$loglik[2])
mod1$loglik[2]
mod1
(-2)*(mod1$loglik[1]-mod2$loglik[2])
mod2$loglik
names(mod2)
mod2
(-2)*(mod1$loglik[1]-mod2$loglik[2])
mod1$loglik[1]
(mod1$loglik[1]-mod2$loglik[2])
(mod2$loglik[1]-mod2$loglik[2])
mod2
2*(mod2$loglik[1]-mod2$loglik[2])
mod2$loglik
mod2
mod1
#likelihood ratio test
2*(mod2$loglik[2]-mod2$loglik[1])
mod2$loglik
ACTG175
varX
#ËÆæÂÆöXÁöÑÊúüÊúõÂíåÂçèÊñπÂ∑Æ
expe <- c(1,2,3)
varX <- matrix(rep(c(1,2,3),3),3,3)
varX
titanic
data(titanic)
install.packages("install.packages("titanic")")
install.packages("titanic")
library(titanic)
titanic
Titanic
titanic_train
ovarian
library(titanic)
titanic_train
titanic
Titanic
install.packages(""LocalControl"")
install.packages("LocalControl")
install.packages("epitools")
library(epitools)
wcgs
data("wcgs")
wcgs
#1.
library(titanic)
data("Titanic")
Titanic
Titanic[1,]
#2.
library(survival)
ovarian
#4.
library(LocalControl)
framingham
?setwd
addicts
addicts
install("suanselete3")
install.packages("suanselete3")
library(suanselete3)
install.packages("lbraglia")
#6.
anderson <- read.table("anderson.dat")
#5.
#set your Working directory
setwd("E:\myfile\Â≠¶‰π†\lecture\ÁîüÂ≠òÂàÜÊûê\Âä©ÊïôÂ∑•‰Ωú\RealData")
#6.
anderson <- read.table("anderson.dat")
#6.
anderson <- read.table("anderson.dat")
#5.
#set your Working directory
setwd("E:\myfile\Â≠¶‰π†\lecture\ÁîüÂ≠òÂàÜÊûê\Âä©ÊïôÂ∑•‰Ωú\RealData")
#5.
#set your Working directory
setwd("E:/myfile/Â≠¶‰π†/lecture/ÁîüÂ≠òÂàÜÊûê/Âä©ÊïôÂ∑•‰Ωú/RealData")
#6.
anderson <- read.table("anderson.dat")
anderson
#6.
anderson <- read.table("anderson.dat",col.names=c('Subj','Surv','Relapse','Sex','log WBC',
'Rx'))
anderson
#6.
anderson <- read.table("anderson.dat",col.names=c('Surv','Relapse','Sex','log WBC',
'Rx'))
anderson
#7.
rhDNase <- read.table("rhDNase.dat", header=F)
rhDNase
#7.
rhDNase <- read.table("rhDNase.dat", header=T)
head(rhDNase)
names(rhDNase)
#7.
rhDNase <- read.table("rhDNase.dat",col.names=c("id","trt","fev","fev2","time1","time2","status","etype","enum","enum1","enum2"))
head(rhDNase)
#7.
rhDNase <- read.table("rhDNase.dat",col.names=c("id","trt","fev","fev2","time1","time2","status","etype","enum","enum1","enum2"))
head(rhDNase)
rhDNase <- read.table("rhDNase.dat",col.names=c("id","trt","fev","fev2","time1","time2","status","etype","enum","enum1","enum2"))
rhDNase$fevc    <- rhDNase$fev - mean(rhDNase$fev[rhDNase$enum == 1])
rhDNase$gtime   <- rhDNase$time2 - rhDNase$time1
rhDNase$status1 <- ifelse(rhDNase$etype == 1, rhDNase$status, 0)
rhDNase[1:10, c("id","enum","etype","time1","time2","gtime",
"status","status1","trt","fev","fevc")]
install.packages("tpr")
#7.
library(tpr)
dnase
data(dnase)
dnase
install.pacakages("speff2trial")
install.packages("speff2trial")
install.packages("etm")
#9.
library(etm)
data(abortion)
install.packages("mvna")
library(mvna)
sir.adm
data(sir.adm)
install.packages("kmi")
#12.
load(icu.pneu.rda)
#12.
load("icu.pneu.rda")
load("E:/myfile/Â≠¶‰π†/lecture/ÁîüÂ≠òÂàÜÊûê/Âä©ÊïôÂ∑•‰Ωú/RealData/icu.pneu.rda")
#12.
library(kmi)
load("icu.pneu.rda")
load("E:/myfile/Â≠¶‰π†/lecture/ÁîüÂ≠òÂàÜÊûê/Âä©ÊïôÂ∑•‰Ωú/RealData/icu.pneu.rda")
source("icu.pneu.rda")
readRDS("icu.pneu.rda")
install.packages("readr")
#12.
library(readr)
readr("icu.pneu.rda")
read_rds("icu.pneu.rda")
#5.
#set your Working directory
setwd("E:/myfile/Â≠¶‰π†/lecture/ÁîüÂ≠òÂàÜÊûê/Âä©ÊïôÂ∑•‰Ωú/RealData")
read_rds("icu.pneu.rda")
readRDS("icu.pneu.rda")
load("icu.pneu.rData")
#2.
library(survival)
ovarian
library(suvival)
library(survival)
bladder
cgd
colon
flchain
mgus
pbc
lung
heart
veteran
#12.
install.packages("kmi_0.5.tar.gz")
library(kmi)
library(kmi_0.5)
#12.
install.packages("E:/myfile/Â≠¶‰π†/lecture/ÁîüÂ≠òÂàÜÊûê/Âä©ÊïôÂ∑•‰Ωú/RealData/kmi_0.5.tar.gz")
